==========================================================
=================  RESUMO GITHUB  ========================
==========================================================


Criando uma chave publica e privada
----------------------------------------------------------
 
ssh-keygen

cria dois arquivos um 
id_rsa (chave privada) e id_rsa.pub(chave publica) 

cat id_rsa.pub mostra o conteudo do arquivo
adicionar uma nova chave no settings/ssh do github e colar o conteudo do arquivo.


criando um novo repositorio no github
-----------------------------------------------------------
git remote add origin (url do repositorio endereco que voce vai fazer o push)
git push origin master 


Como colaborar com um projeto no github
-----------------------------------------------------------
git pull request

o que normalmente se faz e usar o botao (fork) do github *** ele faz uma copia do repositorio na sua conta git.



Como apagar um repositorio no github
-----------------------------------------------------------
Para apagar um repositorio no github isso se faz apenas pelo site, nao da pra fazer pelo terminal do gitbash.
v'a em settings dentro do repositorio / area danger / e depois confirmar a exclusao.



criando tags e realeses
------------------------------------------------------------
git tag 0.1.0
git tag -l (mostra todas a tags criadas local e remotamente)
git push origin master --tags

versionamento semantico
------------------------------------------------------------
e a forma organizado voce versiona o seu software - toda vez que adicionar uma funcionalidade

v.0.0.0

v.0 - versao major do seu software - normalmente quando altera a major version / muda tbm toda a compatibilidade ou estrutura do software.
v.0.0 - minor version - uma versao dentro de uma versao. (toda vez que adcionar uma nova funcionalidade) ex. v0.1 - v0.2 - v0.3
v.0.0.0 - e um path - quando vc encontra um bug e corrige / quando vc faz uma melhoria / faz uma alteracao / tem que manter a compatibilidade - v.0.1.1 - v.0.1.2 - v.0.1.3


Mais sobre versionamento semântico

Para você encontrar maiores informações sobre versionamento semântico acesse:

http://semver.org/


Push em tags e remoção
-----------------------------------------------------------------------------------

Muitas vezes você simplesmente precisa criar uma tag e depois dar push na mesma no repositório remoto (github por exemplo).

Nesse caso, para que as tags sejam enviadas, utilize o comando:

Agora se você quiser remover as tags criadas, utilize os comandos abaixo:

git tag -d 0.1.0  (removendo tag localmente)
git push origin :refs/tags/0.1.0 (removendo tag no repositório remoto)



Repositorio Bare
---------------------------------------------------------------------------------
 
Criando um repositorio local 

git init --bare (o git cria um repositorio remoto local)
git remote add local ssh://localhost/(caminho do diretorio bare)
git push local master



Trabalhando com Hooks
-----------------------------------------------------------------------------------
Possibidade de dar push nos arquivos alterados e automaticamente jogar os arquivos direto para a pasta do site.

dentro do diretorio * Bare *
acessar a pasta /hooks
e criar um arquivo post-receive
e dentro do arquivo digitar

#!/bin/sh
GIT_WORK_TREE=/(MEU SITE.COM.BR) git checkout -f
salvar 

e dar permissao 
chmod +x post-receive

tudo isso em ambiente unix



Dicas em geral
----------------------------------------------------------------------------------

Tratando conflitos

Quando voce tentar fazer um merge de uma branch e isso gerar conflito o git nao permitira que vc realiza o commit ate resolver o problema.
sendo assim, vc tera que entrar no arquivo escolher qual alteracao vc deve manter.
dar um git add NOME_DO_ARQUIVO
e so entao, realizar o commit

o git gerara um novo log resolvendo o conflinto


Gerador de texto - MARKDOWN
--------------------------------------------------------------------------------------

https://pandao.github.io/editor.md/en.html




====================================================================================================================================
DONE

